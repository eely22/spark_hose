{
  "name": "server-event",
  "version": "1.0.1",
  "description": "Library to use server sent events easy in node and on the client side. Can be used as express middleware",
  "main": "index.js",
  "scripts": {},
  "repository": {
    "type": "git",
    "url": "https://github.com/Zanisimo/server-event.git"
  },
  "keywords": [
    "sse",
    "middleware",
    "eventsource",
    "event",
    "source",
    "server",
    "sent",
    "events"
  ],
  "author": {
    "name": "Å½anis Jegermanis"
  },
  "license": "BSD",
  "engines": {
    "node": ">=0.6.0 <=0.10.0"
  },
  "devDependencies": {},
  "readme": "server-event\n============\n\nLibrary to use Server Sent Events easy in node and on the client side with EventSource. Can be used as express middleware. Current browser support can be found here: http://caniuse.com/eventsource\n\nUsage:\n========\n\n## Server:\n\t\nAs express middleware:\n\n```javascript\nvar serverEvent, express, app;\n\nserverEvent = require('server-event');\napp = require('express')();\n\napp.listen(8080);\n\nserverEvent = serverEvent({ express : app }); // Optional. Pass in reference to express to access client.js file from client side\n\napp.get('/events', serverEvent, function (req, res) {\n\tres.sse('test', \"event with name test\");\n\tres.sse('default event name message');\n});\n```\nOr you can use it like this:\n\n```javascript\napp.get('/events', function (req, res) {\n\tserverEvent(req, res); // this will work the same as using it as middleware\n\n\tres.sse('test', \"event with name test\");\n\tres.sse('default event name message');\n});\n```\n\n## Client:\n\n```html\n<script type=\"text/javascript\" src=\"http://localhost:8080/sse.js\"></script>\n<script type=\"text/javascript\">\n\t// in this example sse.js will be fetched from server\n\t// you can also copy client.js file and serve it from different place\n\tvar sse = new ServerSentEvent('events');\n\n\tsse.on('test', function (data) {\n\t\tconsole.log('test', data);\n\t});\n\n\tsse.on('message', function (data) {\n\t\tconsole.log('message', data);\n\t});\n</script>\n```\n\n##### Functions:\n\n- *on([name], callback)*\n\t\nAdds event listener to event with provided name. If name is not provided it will be set to default name \"message\". Callback will return two arguments - data and event in the same order.\n\n- *once([name], callback)*\n\t\nWorks the same way as \"on\", but the callback will be called only once. After that the event listener will be removed\n\n- *removeListener([name], callback)*\n\t\nWill remove event listener by name. You need to provide the same function witch were used in \"on\" function when the event was attached. If name is not provided it will be set to default name \"message\".\n\n- *removeAllListeners([name])*\n\t\nRemoves all event listeners by name. If name is not provided will remove all event listeners that were set.\n\n##\nIn next update will add support for older browsers and IE\n\n## Tests\nWill be coming soon\n\n## License \n\n(The MIT License)\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/Zanisimo/server-event/issues"
  },
  "_id": "server-event@1.0.1",
  "_from": "server-event@"
}
